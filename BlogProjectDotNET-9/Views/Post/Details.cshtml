@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@model Post

@{
    ViewData["Title"] = Model.Title;
}

<style>
    .content-wrapper {
        padding: 30px 20px;
        max-width: 900px;
        margin: 0 auto;
        font-family: 'Segoe UI', sans-serif;
    }

    .feature-image {
        width: 100%;
        height: 450px;
        object-fit: cover;
        border-radius: 8px;
        margin-bottom: 30px;
    }

    .comment-card {
        border-left: 5px solid #0d6efd;
    }

    .comment-avatar {
        width: 50px;
        height: 50px;
        object-fit: cover;
        border-radius: 50%;
    }

    .comment-meta {
        font-size: 0.85rem;
        color: #6c757d;
    }

    .comment-section-title {
        border-bottom: 2px solid #dee2e6;
        padding-bottom: 5px;
        margin-top: 50px;
    }
</style>

<div class="content-wrapper">
    @* Admin / Author Tools *@
    @if (User.IsInRole("Admin") || User.IsInRole("Author"))
    {
        <div class="d-flex justify-content-end mb-2">
            <a class="btn btn-outline-primary me-2" asp-action="Edit" asp-controller="Post" asp-route-id="@Model.Id">Edit</a>
            <a class="btn btn-outline-danger" asp-action="Delete" asp-controller="Post" asp-route-id="@Model.Id">Delete</a>
        </div>
    }

    <h1 class="fw-bold">@Model.Title</h1>

    <div class="mb-2 text-muted">
        <span class="badge bg-primary">By: @Model.Author</span>
        <span class="badge bg-secondary">Published: @Model.PublishedDate.ToString("yyyy-MM-dd")</span>
        <span class="badge bg-info text-dark">Category: @Model.Category.Name</span>
    </div>

    <img src="@Model.FeatureImagePath" alt="@Model.Title" class="feature-image" />

    <div class="mb-5">
        @Html.Raw(Model.Content)
    </div>

    <h4 class="comment-section-title">Comments</h4>

    @if (Model.Comments.Any())
    {
        <div class="CommentSection">
            @foreach (var comment in Model.Comments)
            {
                var user = comment.User;
                var roleTask = UserManager.GetRolesAsync(user);
                roleTask.Wait();
                var role = roleTask.Result.FirstOrDefault() ?? "User";

                var badgeClass = role switch
                {
                    "Admin" => "bg-danger",
                    "Author" => "bg-warning text-dark",
                    _ => "bg-secondary"
                };

                <div class="card shadow-sm mb-3 comment-card">
                    <div class="card-body">
                        <div class="d-flex align-items-center mb-2">
                            <img src="@(user?.ProfilePictureUrl ?? "/images/default-user.png")" alt="Profile" class="comment-avatar me-3 border border-2" />
                            <div>
                                <div class="fw-semibold">@user?.FullName</div>
                                <span class="badge @badgeClass">@role</span><br />
                                <small class="comment-meta">@comment.CommentDate.ToString("g")</small>
                            </div>
                        </div>
                        <p class="mb-0">@comment.CommentText</p>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <p class="text-muted">No comments yet. Be the first to comment!</p>
    }

    <hr class="mt-5" />

    <h5 class="mb-3">Leave a Comment</h5>

    @if (!User.Identity.IsAuthenticated)
    {
        <p>You must be logged in to leave a comment.</p>
        <a asp-controller="Account" asp-action="Login" class="btn btn-primary">Login</a>
    }
    else
    {
        <form id="FormComment" asp-action="AddComment" asp-controller="Comment" method="post">
            <div class="mb-3">
                <label for="Content" class="form-label">Your Comment</label>
                <textarea id="Content" class="form-control" name="Content" rows="4" required></textarea>
            </div>
            <button type="submit" class="btn btn-success px-4">Post Comment</button>
        </form>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $("#FormComment").on('submit', function (event) {
                event.preventDefault();

                var content = $("#Content").val();
                var postId = @Model.Id;

                $.ajax({
                    url: '@Url.Action("AddComment", "Comment")',
                    type: 'POST',
                    contentType: "application/json",
                    data: JSON.stringify({ content: content, postId: postId }),
                    success: function (response) {
                        $('#FormComment')[0].reset();

                        $('.CommentSection').append(`
                            <div class="card shadow-sm mb-3 comment-card">
                                <div class="card-body">
                                    <div class="d-flex align-items-center mb-2">
                                        <img src="${response.profileImage}" class="comment-avatar me-3 border border-2" />
                                        <div>
                                            <div class="fw-semibold">${response.userFullName}</div>
                                            <span class="badge ${response.badgeClass}">${response.role}</span><br />
                                            <small class="comment-meta">${response.commentDate}</small>
                                        </div>
                                    </div>
                                    <p class="mb-0">${response.commentText}</p>
                                </div>
                            </div>
                        `);
                    },
                    error: function (xhr, status, error) {
                        console.error("Error:", error);
                    }
                });
            });
        });
    </script>
}
